local success, err = pcall(function()
    -- Load external UI Library
    local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt"))()

    -- Check if the library loaded successfully
    if not lib then
        error("Failed to load the external UI library.")
    end

    local win = lib:Window("Fabled Legacy - ADPO", Color3.fromRGB(44, 120, 224), Enum.KeyCode.RightControl)

    local tab = win:Tab("Credits")
    tab:Label("Made By ADPO")
    tab:Label("Made by TrollNation")

    local tab = win:Tab("Main")

    -- Initialization of variables
    local autofarming = false
    local autofarmMode = "Above"
    _G.FriendColor = Color3.fromRGB(255, 255, 255)
    _G.EnemyColor = Color3.fromRGB(255, 0, 0)

    local TweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

    -- Functions
    local function AutoSwing()
        game:GetService("ReplicatedStorage").Swing:FireServer()
    end

    local function enableNoclip()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end

    local function disableNoclip()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end

    local function makePlayerUpright()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        spawn(function()
            while true do
                if humanoidRootPart then
                    local position = humanoidRootPart.Position
                    humanoidRootPart.CFrame = CFrame.new(position, position + Vector3.new(0, 0, 1))
                end
                wait(0.1)
            end
        end)
    end

    local function makePlayerFaceForward()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        local forwardDirection = Vector3.new(0, 0, 1)
        local newCFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + forwardDirection)
        
        humanoidRootPart.CFrame = newCFrame
    end

    -- Check if an enemy is alive
    local function isEnemyAlive(npc)
        return npc and npc.Parent and npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0
    end

    -- Find enemy target position
    local function getEnemyTargetPosition(enemy)
        local targetPart = enemy:FindFirstChild("HumanoidRootPart")
        
        if not targetPart then
            targetPart = enemy:FindFirstChild("Body") or enemy:FindFirstChild("Head")
        end
        
        if targetPart then
            return targetPart.Position
        end
        return nil
    end

    -- Kaegyr specific targeting
    local function getKaegyrTargetPosition(kaegyr)
        local targetPart = kaegyr:FindFirstChild("RootPart") or kaegyr:FindFirstChild("Cube")
        
        if not targetPart then
            targetPart = kaegyr:FindFirstChild("Bone.009") or kaegyr:FindFirstChild("Bone.034") or kaegyr:FindFirstChild("Bone.038")
        end
        
        if targetPart then
            return targetPart.Position
        end
        return nil
    end

    -- Teleportation to mode logic
    local function teleportToMode(npc)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        if npc and isEnemyAlive(npc) then
            local targetPart
            if npc.Name == "Kaegyr" then
                targetPart = getKaegyrTargetPosition(npc)
            else
                targetPart = getEnemyTargetPosition(npc)
            end

            local offset = Vector3.new(0, 20, 0)

            if not targetPart then
                return
            end

            if autofarmMode == "Above" then
                offset = Vector3.new(0, 20, 0)
            elseif autofarmMode == "Below" then
                offset = Vector3.new(0, -20, 0)
            elseif autofarmMode == "Behind" then
                offset = Vector3.new(-5, 0, 0)
            elseif autofarmMode == "Infront" then
                offset = Vector3.new(5, 0, 0)
            elseif autofarmMode == "Spinning" then
                local radius = 5
                local speed = 1
                local angle = 0
                spawn(function()
                    while autofarming do
                        local x = targetPart.X + radius * math.cos(angle)
                        local z = targetPart.Z + radius * math.sin(angle)
                        local newPosition = Vector3.new(x, targetPart.Y + 20, z)

                        local targetCFrame = CFrame.new(newPosition, targetPart)
                        humanoidRootPart.CFrame = targetCFrame

                        angle = angle + speed * 0.05
                        wait(0.05)
                    end
                end)
                return
            end

            -- Handle teleportation with smoother movement
            local distanceToTarget = (targetPart - humanoidRootPart.Position).Magnitude
            local tweenDuration = math.min(1, distanceToTarget / 10)

            local adjustedTweenInfo = TweenInfo.new(tweenDuration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

            spawn(function()
                while autofarming do
                    if isEnemyAlive(npc) then
                        local currentTargetPosition = targetPart
                        local targetPosition = currentTargetPosition + offset
                        local targetCFrame = CFrame.new(targetPosition, currentTargetPosition)

                        local tween = TweenService:Create(humanoidRootPart, adjustedTweenInfo, {CFrame = targetCFrame})
                        tween:Play()

                        tween.Completed:Connect(function()
                            local bodyPosition = Instance.new("BodyPosition")
                            bodyPosition.MaxForce = Vector3.new(400000, 400000, 400000)
                            bodyPosition.D = 10000
                            bodyPosition.P = 10000
                            bodyPosition.Position = humanoidRootPart.Position + offset
                            bodyPosition.Parent = humanoidRootPart

                            while autofarming and isEnemyAlive(npc) do
                                bodyPosition.Position = currentTargetPosition + offset
                                wait(0.05)
                            end
                            bodyPosition:Destroy()
                        end)
                    end
                    wait(0.5)
                end
            end)
        end
    end

    -- Teleport to closest enemy
    local function teleportToClosestEnemy()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        local function findClosestEnemy()
            local closestEnemy = nil
            local shortestDistance = math.huge

            for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                if enemy:FindFirstChild("HumanoidRootPart") or enemy:FindFirstChild("Body") or enemy:FindFirstChild("Head") or enemy:FindFirstChild("RootPart") then
                    local distance = (enemy.PrimaryPart.Position - humanoidRootPart.Position).Magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestEnemy = enemy
                    end
                end
            end

            return closestEnemy
        end

        while autofarming do
            local closestEnemy = findClosestEnemy()
            if closestEnemy then
                teleportToMode(closestEnemy)
                makePlayerFaceForward()
                wait(0.1)
            end
            wait(0.1)
        end
    end

    -- Watch for when the player dies and respawns
    game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
        if autofarming then
            enableNoclip()
            makePlayerUpright()
            spawn(teleportToClosestEnemy)
        end
    end)

    -- UI Toggles for Autofarm and Auto Swing
    tab:Toggle("Autofarm", false, function(t)
        autofarming = t
        if autofarming then
            enableNoclip()
            makePlayerUpright()
            spawn(teleportToClosestEnemy)
        else
            disableNoclip()
        end
    end)

    tab:Dropdown("Autofarm Mode", {"Above", "Behind", "Infront", "Below", "Spinning"}, function(selectedMode)
        autofarmMode = selectedMode
    end)

    local isAutoSwingActive = false

    tab:Toggle("Auto Swing", false, function(t)
        isAutoSwingActive = t
        spawn(function()
            while isAutoSwingActive do
                AutoSwing()
                wait(0.1)
            end
        end)
    end)

    -- Auto Use Spells
    local isAutoUseSpellsActive = false

    tab:Toggle("Auto Use Spells", false, function(t)
        isAutoUseSpellsActive = t
        spawn(function()
            while isAutoUseSpellsActive do
                local argsE = { [1] = "E" }
                game:GetService("ReplicatedStorage").useSpell:FireServer(unpack(argsE))

                local argsQ = { [1] = "Q" }
                game:GetService("ReplicatedStorage").useSpell:FireServer(unpack(argsQ))

                wait(0.5)
            end
        end)
    end)

    -- Auto Replay
    local isAutoReplayActive = false

    tab:Toggle("Auto Replay", false, function(t)
        isAutoReplayActive = t
        spawn(function()
            while isAutoReplayActive do
                local args = {
                    [1] = "repeat"
                }

                game:GetService("ReplicatedStorage").voteRemote:FireServer(unpack(args))
                
                wait(1)
            end
        end)
    end)

    -- Inventory Tab
    local tab = win:Tab("Inventory")

    tab:Button("Equip Best", function()
        game:GetService("ReplicatedStorage").EquipBest:FireServer()
    end)

end)

-- Error handling if the script doesn't load
if not success then
    warn("Error occurred while running the script: " .. err)
end
